{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mrrobot/Desktop/projetfinal/src/screens/FirstPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Background from \"../components/Background\";\nimport CalendarPicker from 'react-native-calendar-picker';\n\nvar FirstPage = function (_Component) {\n  _inherits(FirstPage, _Component);\n\n  var _super = _createSuper(FirstPage);\n\n  function FirstPage(props) {\n    var _this;\n\n    _classCallCheck(this, FirstPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: '',\n      phone: '',\n      comensales: '',\n      fecha: '',\n      hora: '',\n      selectedStartDate: null\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FirstPage, [{\n    key: \"onDateChange\",\n    value: function onDateChange(date) {\n      this.setState({\n        selectedStartDate: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedStartDate = this.state.selectedStartDate;\n      var startDate = selectedStartDate ? selectedStartDate.toString().split('00:00:00 GMT+0000') : '';\n      var navigate = this.props.navigation.navigate;\n      dataToSend = {\n        data: \" Nombre: \" + this.state.username + \" Comensales: \" + this.state.comensales + \" Fecha: \" + startDate + \" Hora: \" + this.state.hora\n      };\n      return React.createElement(View, {\n        style: {\n          padding: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, \"  \"), React.createElement(TextInput, {\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        placeholder: ' Nombre: ',\n        style: styles.input,\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.phone,\n        onChangeText: function onChangeText(phone) {\n          return _this2.setState({\n            phone: phone\n          });\n        },\n        placeholder: ' Tel√©fono: ',\n        placeholderTextColor: \"black\",\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.comensales,\n        onChangeText: function onChangeText(comensales) {\n          return _this2.setState({\n            comensales: comensales\n          });\n        },\n        placeholder: ' N# Comensales:                                        ',\n        style: styles.input,\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.hora,\n        onChangeText: function onChangeText(hora) {\n          return _this2.setState({\n            hora: hora\n          });\n        },\n        placeholder: ' Hora: ',\n        style: styles.input,\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, React.createElement(CalendarPicker, {\n        onDateChange: this.onDateChange,\n        weekdays: ['Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab', 'Dom'],\n        months: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        style: styles.input,\n        title: \"Reservar\",\n        color: \"#F6820D\",\n        onPress: function onPress() {\n          return navigate('ThirdPage', dataToSend);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }]);\n\n  return FirstPage;\n}(Component);\n\nvar styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    padding: 5,\n    marginBottom: 10,\n    backgroundColor: '#D3D3D3',\n    borderRadius: 20\n  },\n  button: {\n    borderRadius: 40,\n    backgroundColor: \"#F6820D\"\n  }\n});\nexport default memo(FirstPage);","map":{"version":3,"sources":["/home/mrrobot/Desktop/projetfinal/src/screens/FirstPage.js"],"names":["React","Component","memo","ScrollView","Background","CalendarPicker","FirstPage","props","state","username","phone","comensales","fecha","hora","selectedStartDate","onDateChange","bind","date","setState","startDate","toString","split","navigate","navigation","dataToSend","data","padding","fontStyle","styles","input","button","StyleSheet","create","flex","marginBottom","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component, memo} from 'react';\nimport { StyleSheet, View, Button, TextInput, Text } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Background from \"../components/Background\";\nimport CalendarPicker from 'react-native-calendar-picker';\n\nclass FirstPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      phone :'',\n      comensales:'',\n      fecha:'',\n      hora:'',\n      selectedStartDate: null,\n      \n    };\n    this.onDateChange = this.onDateChange.bind(this);\n  } \n  onDateChange(date) {\n    this.setState({\n      selectedStartDate: date,\n    });\n  }\n  render() {\n    const { selectedStartDate } = this.state;\n    const startDate = selectedStartDate ? selectedStartDate.toString().split('00:00:00 GMT+0000') : '';\n    const { navigate } = this.props.navigation;\n    \n    dataToSend = {data: \" Nombre: \" + this.state.username\n    + \" Comensales: \"  + this.state.comensales\n    + \" Fecha: \" +  startDate \n    +  \" Hora: \" + this.state.hora}\n    return (\n      \n      \n      <View style={{padding:20}}> \n      <ScrollView>\n      \n      <Text style={{fontStyle:'italic'}}>  </Text>\n      \n      <TextInput\n      value={this.state.username}\n      onChangeText={username => this.setState({ username })}\n      placeholder={' Nombre: '}\n      style={styles.input}\n      placeholderTextColor='black'\n      \n      />\n      <TextInput\n      value={this.state.phone}\n      onChangeText={phone => this.setState({ phone })}\n      placeholder={' Tel√©fono: '}\n      placeholderTextColor='black'\n      style={styles.input}\n      \n      />\n      \n      <TextInput\n      value={this.state.comensales}\n      onChangeText={comensales => this.setState({ comensales })}\n      placeholder={' N# Comensales:                                        '}\n      style={styles.input}\n      placeholderTextColor='black'\n      \n      />\n      \n      <TextInput\n      value={this.state.hora}\n      onChangeText={hora => this.setState({ hora })}\n      placeholder={' Hora: '}\n      style={styles.input}\n      placeholderTextColor='black'\n      \n      />  \n      \n      \n      </ScrollView>\n      \n      \n      <View>\n      <CalendarPicker\n      onDateChange={this.onDateChange}\n      weekdays={['Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab', 'Dom']}\n      months={['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre']}\n      \n      />\n      \n      <View style={styles.button}>\n      <Button\n      style={styles.input}\n      title=\"Reservar\"\n      color=\"#F6820D\"\n      onPress={() =>\n        navigate('ThirdPage', dataToSend)            \n      }\n      />\n      </View>\n      </View>\n      </View>\n      \n      \n      \n      );\n    }\n  }\n  const styles = StyleSheet.create({\n    input: {\n      flex:1,\n      padding: 5,\n      marginBottom: 10,\n      backgroundColor: '#D3D3D3',\n      borderRadius:20,\n      \n    },\n    \n    button:{\n      borderRadius:40,\n      backgroundColor:\"#F6820D\",\n      \n    },\n    \n  });\n  \n  export default memo (FirstPage)\n  "]},"metadata":{},"sourceType":"module"}