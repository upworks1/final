{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mrrobot/Desktop/projetfinal/src/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport { loginUser } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _onLoginPressed = function _onLoginPressed() {\n    var emailError, passwordError, response;\n    return _regeneratorRuntime.async(function _onLoginPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            if (!(emailError || passwordError)) {\n              _context.next = 8;\n              break;\n            }\n\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            setPassword(_objectSpread(_objectSpread({}, password), {}, {\n              error: passwordError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 8:\n            setLoading(true);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(loginUser({\n              email: email.value,\n              password: password.value\n            }));\n\n          case 11:\n            response = _context.sent;\n\n            if (response.error) {\n              setError(response.error);\n            }\n\n            setLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate(\"HomeScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \" Bienvenido \"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ForgotPasswordScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \" Olvidaste tu clave?\"))), React.createElement(Button, {\n    loading: loading,\n    mode: \"contained\",\n    onPress: _onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Entrar\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \" \\xBFA\\xFAn no tienes cuenta? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"RegisterScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \" Reg\\xEDstrate \"))), React.createElement(Toast, {\n    message: error,\n    onDismiss: function onDismiss() {\n      return setError(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"sources":["/home/mrrobot/Desktop/projetfinal/src/screens/LoginScreen.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","loginUser","Toast","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","loading","setLoading","setError","_onLoginPressed","emailError","passwordError","response","navigate","text","styles","forgotPassword","label","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { TouchableOpacity, StyleSheet, Text, View } from \"react-native\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport { loginUser } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const _onLoginPressed = async () => {\n    if (loading) return;\n\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    }\n\n    setLoading(true);\n\n    const response = await loginUser({\n      email: email.value,\n      password: password.value\n    });\n\n    if (response.error) {\n      setError(response.error);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate(\"HomeScreen\")} />\n\n      <Logo />\n\n      <Header> Bienvenido </Header>\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        autoCapitalize=\"none\"\n      />\n\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"ForgotPasswordScreen\")}\n        >\n          <Text style={styles.label}> Olvidaste tu clave?</Text>\n        </TouchableOpacity>\n      </View>\n\n      <Button \n      \n    loading={loading} mode=\"contained\" onPress={_onLoginPressed}>\n        Entrar\n      </Button>\n\n      <View style={styles.row}>\n        <Text style={styles.label}> ¿Aún no tienes cuenta? </Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"RegisterScreen\")}>\n          <Text style={styles.link}> Regístrate </Text>\n        </TouchableOpacity>\n      </View>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\n\nexport default memo(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}