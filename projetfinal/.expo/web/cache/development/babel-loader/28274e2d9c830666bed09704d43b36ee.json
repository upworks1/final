{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mrrobot/Desktop/projetfinal/src/screens/RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator, nameValidator } from \"../core/utils\";\nimport { signInUser } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError, emailError, passwordError, response;\n    return _regeneratorRuntime.async(function _onSignUpPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            nameError = nameValidator(name.value);\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            if (!(emailError || passwordError || nameError)) {\n              _context.next = 10;\n              break;\n            }\n\n            setName(_objectSpread(_objectSpread({}, name), {}, {\n              error: nameError\n            }));\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            setPassword(_objectSpread(_objectSpread({}, password), {}, {\n              error: passwordError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 10:\n            setLoading(true);\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(signInUser({\n              name: name.value,\n              email: email.value,\n              password: password.value\n            }));\n\n          case 13:\n            response = _context.sent;\n\n            if (response.error) {\n              setError(response.error);\n            }\n\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate(\"HomeScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \" Crea tu cuenta \"), React.createElement(TextInput, {\n    label: \"Nombre\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Contrase\\xF1a\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    loading: loading,\n    mode: \"contained\",\n    onPress: _onSignUpPressed,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Registrarse\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \" \\xBF Ya tienes una cuenta ? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"LoginScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Login\"))), React.createElement(Toast, {\n    message: error,\n    onDismiss: function onDismiss() {\n      return setError(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\nexport default memo(RegisterScreen);","map":{"version":3,"sources":["/home/mrrobot/Desktop/projetfinal/src/screens/RegisterScreen.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","signInUser","Toast","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","loading","setLoading","setError","_onSignUpPressed","nameError","emailError","passwordError","response","navigate","text","styles","button","row","label","link","StyleSheet","create","color","colors","secondary","marginTop","flexDirection","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport {\n  emailValidator,\n  passwordValidator,\n  nameValidator\n} from \"../core/utils\";\nimport { signInUser } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState({ value: \"\", error: \"\" });\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const _onSignUpPressed = async () => {\n    if (loading) return;\n\n    const nameError = nameValidator(name.value);\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError });\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    }\n\n    setLoading(true);\n\n    const response = await signInUser({\n      name: name.value,\n      email: email.value,\n      password: password.value\n    });\n\n    if (response.error) {\n      setError(response.error);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate(\"HomeScreen\")} />\n\n      <Logo />\n\n      <Header> Crea tu cuenta </Header>\n\n      <TextInput\n        label=\"Nombre\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={text => setName({ value: text, error: \"\" })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Contraseña\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        autoCapitalize=\"none\"\n      />\n\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        onPress={_onSignUpPressed}\n        style={styles.button}\n      >\n        Registrarse\n      </Button>\n\n      <View style={styles.row}>\n        <Text style={styles.label}> ¿ Ya tienes una cuenta ? </Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"LoginScreen\")}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\n\nexport default memo(RegisterScreen);\n"]},"metadata":{},"sourceType":"module"}