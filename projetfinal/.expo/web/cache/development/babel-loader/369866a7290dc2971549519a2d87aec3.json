{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mrrobot/Desktop/projetfinal/src/screens/ForgotPasswordScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { emailValidator } from \"../core/utils\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport Button from \"../components/Button\";\nimport { sendEmailWithPassword } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\",\n    type: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toast = _useState6[0],\n      setToast = _useState6[1];\n\n  var _onSendPressed = function _onSendPressed() {\n    var emailError, response;\n    return _regeneratorRuntime.async(function _onSendPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            emailError = emailValidator(email.value);\n\n            if (!emailError) {\n              _context.next = 6;\n              break;\n            }\n\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 6:\n            setLoading(true);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(sendEmailWithPassword(email.value));\n\n          case 9:\n            response = _context.sent;\n\n            if (response.error) {\n              setToast({\n                type: \"error\",\n                value: response.error\n              });\n            } else {\n              setToast({\n                type: \"success\",\n                value: \"El correo ha sido enviado.A\"\n              });\n            }\n\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate(\"LoginScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \"Recuperar constrase\\xF1a\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"done\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    loading: loading,\n    mode: \"contained\",\n    onPress: _onSendPressed,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"Enviar instrucciones al correo\"), React.createElement(TouchableOpacity, {\n    style: styles.back,\n    onPress: function onPress() {\n      return navigation.navigate(\"LoginScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, \"\\u2190 Regresar al menu\")), React.createElement(Toast, {\n    type: toast.type,\n    message: toast.value,\n    onDismiss: function onDismiss() {\n      return setToast({\n        value: \"\",\n        type: \"\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  back: {\n    width: \"100%\",\n    marginTop: 12\n  },\n  button: {\n    marginTop: 12\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: \"100%\"\n  }\n});\nexport default memo(ForgotPasswordScreen);","map":{"version":3,"sources":["/home/mrrobot/Desktop/projetfinal/src/screens/ForgotPasswordScreen.js"],"names":["React","memo","useState","emailValidator","Background","BackButton","Logo","Header","TextInput","theme","Button","sendEmailWithPassword","Toast","ForgotPasswordScreen","navigation","value","error","email","setEmail","loading","setLoading","type","toast","setToast","_onSendPressed","emailError","response","navigate","text","styles","button","back","label","StyleSheet","create","width","marginTop","color","colors","secondary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { emailValidator } from \"../core/utils\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport Button from \"../components/Button\";\nimport { sendEmailWithPassword } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nconst ForgotPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [toast, setToast] = useState({ value: \"\", type: \"\" });\n  \n  const _onSendPressed = async () => {\n    if (loading) return;\n    \n    const emailError = emailValidator(email.value);\n    \n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n    \n    setLoading(true);\n    \n    const response = await sendEmailWithPassword(email.value);\n    \n    if (response.error) {\n      setToast({ type: \"error\", value: response.error });\n    } else {\n      setToast({\n        type: \"success\",\n        value: \"El correo ha sido enviado.A\"\n      });\n    }\n    \n    setLoading(false);\n  };\n  \n  return (\n    <Background>\n    <BackButton goBack={() => navigation.navigate(\"LoginScreen\")} />\n    \n    <Logo />\n    \n    <Header>Recuperar constraseña</Header>\n    \n    <TextInput\n    label=\"Email\"\n    returnKeyType=\"done\"\n    value={email.value}\n    onChangeText={text => setEmail({ value: text, error: \"\" })}\n    error={!!email.error}\n    errorText={email.error}\n    autoCapitalize=\"none\"\n    autoCompleteType=\"email\"\n    textContentType=\"emailAddress\"\n    keyboardType=\"email-address\"\n    />\n    \n    <Button\n    loading={loading}\n    mode=\"contained\"\n    onPress={_onSendPressed}\n    style={styles.button}\n    >\n    Enviar instrucciones al correo\n    </Button>\n    \n    <TouchableOpacity\n    style={styles.back}\n    onPress={() => navigation.navigate(\"LoginScreen\")}\n    >\n    <Text style={styles.label}>← Regresar al menu</Text>\n    </TouchableOpacity>\n    \n    <Toast\n    type={toast.type}\n    message={toast.value}\n    onDismiss={() => setToast({ value: \"\", type: \"\" })}\n    />\n    </Background>\n    );\n  };\n  \n  const styles = StyleSheet.create({\n    back: {\n      width: \"100%\",\n      marginTop: 12\n    },\n    button: {\n      marginTop: 12\n    },\n    label: {\n      color: theme.colors.secondary,\n      width: \"100%\"\n    }\n  });\n  \n  export default memo(ForgotPasswordScreen);\n  \n\n  "]},"metadata":{},"sourceType":"module"}